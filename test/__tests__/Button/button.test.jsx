import renderer from 'react-test-renderer'import Button from '../../../lib/Button/button'import Icon from '../../../lib/Icon/icon'import { mount } from "enzyme"import React from 'react'describe('button',()=>{  it('是一个button',()=>{    const json = renderer.create(<Button/>).toJSON()    expect(json).toMatchSnapshot()  })  it('接受一个className',()=>{    const c = mount(<Button className='btn'/>)    expect(c.find('button').hasClass('btn')).toBe(true)  })  it('接受disabled',()=>{    const c = mount(<Button className='btn' disabled/>)    expect(c.props().disabled).toBe(true)    c.setProps({ disabled: false });    expect(c.props().disabled).toBe(false)  })  it('接受children',()=>{    let c = mount(<Button className='btn'>123123</Button>)    expect(c.find('button > span').text()).toBe("123123")    c = mount(<Button className='btn'><span>123123</span></Button>)    expect(c.contains(<span>123123</span>)).toBe(true)    c = mount(<Button className='btn'><Icon/></Button>)    expect(c.find('svg').hasClass('merry-ui-icon')).toBe(true)  })  it('接收color',()=>{    const c = mount(<Button className='btn' color={'primary'}/>)    const _expect = (className,props,expected) =>{      expect(c.find('button').hasClass(className)).toBe(expected)      expect(c.props().color).toBe(props)    }    _expect('merry-ui-btn-primary','primary',true)    c.setProps({ color: 'success' });    _expect('merry-ui-btn-success','success',true)    c.setProps({ color: 'warning' });    _expect('merry-ui-btn-warning','warning',true)    c.setProps({ color: 'danger' });    _expect('merry-ui-btn-danger','danger',true)    c.setProps({ color: 'info' });    _expect('merry-ui-btn-info','info',true)    c.setProps({ color: 'dark' });    _expect('merry-ui-btn-dark','dark',true)    c.setProps({ color: 'gray' });    _expect('merry-ui-btn-gray','gray',true)  })  //'default' | 'small' | 'big'  it('接受size',()=>{    const c = mount(<Button className='btn' size={'default'}/>)    const _expect = (className,props,expected) =>{      expect(c.find('button').hasClass(className)).toBe(expected)      expect(c.props().size).toBe(props)    }    _expect('merry-ui-btn-default','default',false)    c.setProps({ color: 'small' });    _expect('merry-ui-btn-small','small',true)    c.setProps({ color: 'big' });    _expect('merry-ui-btn-big','big',true)  })})